version: '3.9'
services:
  ## Storage Service DB
  postgres-storages:
    container_name: postgres-storages
    image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_DB: storagesDB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-storages:/var/lib/postgresql/data
      - ./sql/storagesdb_init.sql:/docker-entrypoint-initdb.d/storagesdb_init.sql
    expose:
      - ${STORAGES_DB_PORT}
    ports:
      - ${STORAGES_DB_PORT}:5432
    restart: always
    
  ## Resource Service DB
  postgres-mp3resource:
    container_name: postgres-mp3resource
    image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_DB: mp3ResourceDB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-mp3resource:/var/lib/postgresql/data
      - ./sql/mp3resourcedb_init.sql:/docker-entrypoint-initdb.d/mp3resourcedb_init.sql
    expose:
      - ${MP3_RESOURCE_DB_PORT}
    ports:
      - ${MP3_RESOURCE_DB_PORT}:5432
    restart: always

  ## Song Service DB
  postgres-songs:
    container_name: postgres-songs
    image: ${POSTGRES_IMAGE}
    environment:
      POSTGRES_DB: songsDB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-songs:/var/lib/postgresql/data
      - ./sql/songsdb_init.sql:/docker-entrypoint-initdb.d/songsdb_init.sql
    expose:
      - ${SONGS_DB_PORT}
    ports:
      - ${SONGS_DB_PORT}:5432
    restart: always

  ## Message Broker
  rabbitmq:
    container_name: rabbitmq
    image: ${RABBITMQ_IMAGE}
    ports:
      - "5672:5672" #JMS Port
      - "15672:15672" #Management Port - default user:pass = guest:guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  postgres-mp3resource:
  postgres-songs:
  postgres-storages:
  rabbitmq-data:

