buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE'
        classpath 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:3.1.6'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.springframework.cloud.contract' version '3.1.2'
    id "se.thinkcode.cucumber-runner" version "0.0.11"
}

group = 'pl.kempa.saska'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    set('springCloudVersion', "2021.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:3.1.6"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:testcontainers:1.17.6'
    testImplementation 'org.testcontainers:postgresql:1.17.6'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.21'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier:3.1.6'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-spec:3.1.6'
    testImplementation 'io.cucumber:cucumber-java:7.11.0'
    testImplementation 'io.cucumber:cucumber-junit:7.11.0'
    testImplementation 'io.cucumber:cucumber-spring:7.11.0'
}

contracts {
    baseClassMappings {
        baseClassMapping(".*songcontroller.*", "pl.kempa.saska.rest.SongControllerBase")
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'pl.kempa.saska.bdd',
                    'src/test/resources/features']
        }
    }
}
